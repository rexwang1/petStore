<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>Dog Store</display-name>
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		/WEB-INF/dogstore-security.xml
  		/WEB-INF/dogstore-base.xml
  	</param-value>
  	<!-- 
  	
  	
  	<param-value>
  		/WEB-INF/dogstore-explicit-base.xml
  	</param-value>
  	 -->
  </context-param>	
  
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  <listener>
  	<listener-class>
  		org.springframework.security.web.session.HttpSessionEventPublisher
  	</listener-class>
  </listener>
  
  
  <servlet>
  	<servlet-name>dogstore</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>dogstore</servlet-name>
  	<url-pattern>*.do</url-pattern>
  	<url-pattern>/home.do</url-pattern>
  </servlet-mapping>

  
  <!-- 配置编码过滤器 -->
  <filter>
  	<filter-name>characterEncodingFilter</filter-name>
  	<filter-class>
  		org.springframework.web.filter.CharacterEncodingFilter
  	</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>characterEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
    
  <filter>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  <welcome-file-list>
    <welcome-file>home.do</welcome-file>
  </welcome-file-list>
  
  <!-- 为了防止Hibernate Session is closed问题，将事务的范围扩展到整个view层-->
  <filter>
  	<filter-name>OpenSessionInView</filter-name>
  	<filter-class>
  		org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
  	</filter-class>
  	<init-param>
  		<param-name>singleSession</param-name>
  		<param-value>false</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>OpenSessionInView</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <!-- 
  	SimplePageCachingFilter EhCache页面缓存
  	利用拦截器，这里主要对首页进行缓存
  -->
  <filter>
  	<filter-name>indexCacheFilter</filter-name>
  	<filter-class>net.sf.ehcache.constructs.web.filter.SimplePageCachingFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>indexCacheFilter</filter-name>
  	<url-pattern>/WEB-INF/views/home.jsp</url-pattern>
  </filter-mapping>
  	
  <!-- 
  	SimplePageFragmentCachingFilter EhCache页面部分缓存
  	利用拦截器，这里主要对首页进行缓存
  	
  <filter>
  	<filter-name>fragmentCache</filter-name>
  	<filter-class>net.sf.ehcache.constructs.web.filter.SimplePageFragmentCachingFilter</filter-class>
 	
 	<init-param>
 		<param-name>suppressStackTraces</param-name>
 		<param-value>false</param-value>
 	</init-param>
 	
 	<init-param>
 		<param-name>cacheName</param-name>
 		<param-value>fragmentCache</param-value>
 	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>fragmentCache</filter-name>
  	<url-pattern>/WEB-INF/views/home.jsp</url-pattern>
  	<dispatcher>INCLUDE</dispatcher>
  </filter-mapping>
  
 --> 
</web-app>
